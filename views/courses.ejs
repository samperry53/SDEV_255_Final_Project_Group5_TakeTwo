<!DOCTYPE html>
<html lang="en">
  <%- include('./partials/head.ejs') %>
  <body>
    <%- include('./partials/nav.ejs') %>

    <div class="courses">
      <h2>All Courses</h2>

      <% if (courses.length > 0) { %> <% courses.forEach(course => { %>
      <div class="custom-card course-card mb-6">
        <a class="single" href="/courses/<%= course._id %>">
          <h3 class="name"><%= course.name %></h3>
          <!-- <p class="description"><%= course.description %></p> -->
          <p class="subject"><%= course.subject %></p>
          <p class="credits">Credits: <%= course.credits %></p>
        </a>
        <% if (user && user.role === 'student') { %>
        <button class="register-button" data-courseId="<%= course._id %>">
          Register
        </button>
        <% } %> <% if (user && user.role === 'teacher') { %>
        <a href="/courses/edit/<%= course._id %>"><button>Update</button></a>
        <button onclick="deleteCourse('<%= course._id %>')">Delete</button>
        <% } %>
      </div>
      <% }) %> <% } else { %>
      <p>There are no courses to display...</p>
      <% } %>
    </div>
    <%- include('./partials/footer.ejs') %>
  </body>
</html>

<script>
  function deleteCourse(courseId) {
    if (confirm("Are you sure you want to delete this course?")) {
      fetch(`/courses/delete/${courseId}`, {
        method: "DELETE",
      })
        .then((response) => {
          if (response.ok) {
            // Optionally, you can reload the page or update the UI
            window.location.reload();
          } else {
            throw new Error("Failed to delete course");
          }
        })
        .catch((error) => {
          console.error(error);
          // Handle error here
        });
    }
  }
</script>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const registerButtons = document.querySelectorAll(".register-button");

    registerButtons.forEach((button) => {
      button.addEventListener("click", async (event) => {
        const courseId = button.dataset.courseid;

        try {
          // const response = await fetch('courses/register/' + courseId, {
          const response = await fetch(`courses/register/${courseId}`, {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            }
          });
          console.log(response);
          if (response.ok) {
            const data = await response.json();
            alert(data.message);
            window.location.reload();
          } else {
            const errorData = await response.json();
            throw new Error(
              errorData.message || "Failed to register for the course"
            );
          }
        } catch (error) {
          console.error("Registration error:", error);
          alert(error.message);
        }
      });
    });
  });
</script>

<!-- <script>
//     // Function to handle course submission
//     function handleCourseSubmission(courseId, isAlreadyInSchedule) {
// console.log('Handling submission for Course ID:', courseId);
// console.log('Is already in schedule:', isAlreadyInSchedule);

// if (!isAlreadyInSchedule) {
//   // Assuming you have a function to make an asynchronous request to add the course to the schedule
//   // Modify this part based on your actual implementation
//   schedule_create_post(courseId)
//     .then(function () {
//       showConfirmation(`Course ${courseId} added to your schedule.`);
//     })
//     .catch(function (error) {
//       console.error('Error adding course to schedule:', error);
//     });
// } else {
//   showConfirmation(`Course ${courseId} is already in your schedule.`);
// }
// }
//   </script> -->
